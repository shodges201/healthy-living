{"version":3,"sources":["Components/NavTabs/NavTabs.js","Components/DateSelector/DateSelector.js","Components/TextInput/TextInput.js","Components/CompleteButton/CompleteButton.js","Components/NewItemForm/NewItemForm.js","Components/Graph/Graph.js","Pages/Cholesterol/Cholesterol.js","Pages/RestingHeartRate/RestingHeartRate.js","history.js","Pages/Login/Login.js","Pages/Home/Home.js","Pages/Signup/Signup.js","firebase.js","Pages/App/App.js","serviceWorker.js","index.js","images/darkBackground.jpg"],"names":["useStyles","makeStyles","list","width","padding","fullList","listItem","borderTop","listItemBottom","borderBottom","linkText","color","textDecoration","headerText","rightHeaderLinks","marginLeft","display","direction","TemporaryDrawer","props","classes","console","log","loggedIn","menuItems","React","useState","top","left","bottom","right","state","setState","sideList","side","className","role","onClick","toggleDrawer","onKeyDown","List","style","paddingTop","map","text","index","to","split","join","key","ListItem","button","length","ListItemText","primary","open","event","type","root","CssBaseline","AppBar","position","Toolbar","IconButton","aria-label","edge","clsx","menuButton","hide","Typography","variant","noWrap","Button","logout","Drawer","onClose","MaterialUIPickers","utils","DateFnsUtils","margin","id","label","format","value","selectedDate","onChange","date","handleChange","KeyboardButtonProps","TextInput","TextField","class","CompleteButton","handleForm","size","defaultProps","target","theme","createMuiTheme","overrides","MuiInput","underline","transform","MuiFormLabel","MuiInputLabel","MuiIconButton","MuiInputAdornment","MuiInputBase","NewItemForm","Date","level","handleDate","handleLevel","Number","substr","handleClick","addNewData","caption","ThemeProvider","this","toDateString","Component","ReactFC","fcRoot","FusionCharts","Charts","FusionTheme","Graph","getAllData","cb","fetch","url","method","headers","body","JSON","stringify","userID","user","uid","then","data","json","formattedData","item","toLocaleDateString","amount","entries","chartConfigs","dataSource","height","dataFormat","yAxisLabel","suffix","setadaptiveymin","Container","maxWidth","Cholesterol","RestingHeartRate","createBrowserHistory","LogIn","isSignedIn","uiConfig","signInFlow","signInOptions","firebase","auth","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","callbacks","signInSuccessWithAuthResult","signIn","currentUser","history","push","displayName","signOut","firebaseAuth","Home","componentDidMount","Login","username","password","validate","formSubmit","onSubmit","require","config","process","FIREBASE_KEY","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","FIREBASE_APPID","measurementId","App","unregisterAuthObserver","onAuthStateChanged","backgroundImage","Background","exact","path","render","component","Signup","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.b2a34d28.chunk.js","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n    padding: 0\n  },\n  fullList: {\n    width: 'auto',\n  },\n  listItem: {\n    borderTop: '1px solid lightGrey',\n  },\n  listItemBottom: {\n    borderTop: '1px solid lightGrey',\n    borderBottom: '1px solid lightGrey',\n  },\n  linkText: {\n    color: 'black',\n    textDecoration: 'none'\n  },\n  headerText: {\n    color: 'white',\n    textDecoration: 'none'\n  },\n  rightHeaderLinks: {\n    marginLeft: 'auto',\n    display: \"flex\",\n    direction: \"row\"\n  }\n});\n\nexport default function TemporaryDrawer(props) {\n  const classes = useStyles();\n  console.log(props.loggedIn);\n  const menuItems = props.loggedIn ? ['Home', 'Cholesterol', 'Resting Heart Rate'] : ['Home', 'Log In'];\n  console.log(menuItems);\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n\n  const sideList = side => (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={toggleDrawer(side, false)}\n      onKeyDown={toggleDrawer(side, false)}\n    >\n      <List style={{ paddingTop: '0px' }}>\n        {menuItems.map((text, index) => (\n          <Link to={text.split(' ').join('')} className={classes.linkText} key={text}>\n            <ListItem button className={index === menuItems.length - 1 ? classes.listItemBottom : classes.listItem}>\n              <ListItemText primary={text} />\n            </ListItem>\n          </Link>\n        ))}\n      </List>\n    </div>\n  );\n\n  const toggleDrawer = (side, open) => event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [side]: open });\n  };\n  console.log(props.loggedIn);\n  if (!props.loggedIn) {\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n          position=\"fixed\"\n        >\n          <Toolbar>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={toggleDrawer('left', true)}\n              edge=\"start\"\n              className={clsx(classes.menuButton, state.left && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Link to=\"/Home\" className={classes.headerText}>\n              <Typography variant=\"h5\" noWrap>\n                Healthy Life Style\n            </Typography>\n            </Link>\n            <div className={classes.rightHeaderLinks}>\n              <Link to=\"/Login\" className={classes.headerText}>\n                <Typography variant=\"h5\" noWrap>\n                  Login\n            </Typography>\n              </Link>\n              <Link to=\"/Signup\" className={classes.headerText} style={{ marginLeft: \"30px\" }}>\n                <Typography variant=\"h5\" noWrap>\n                  Signup\n                </Typography>\n              </Link>\n            </div>\n          </Toolbar>\n        </AppBar>\n        <Drawer open={state.left} onClose={toggleDrawer('left', false)}>\n          {sideList('left')}\n        </Drawer>\n      </div>\n    );\n  }\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"fixed\"\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={toggleDrawer('left', true)}\n            edge=\"start\"\n            className={clsx(classes.menuButton, state.left && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Link to=\"/Home\" className={classes.headerText}>\n            <Typography variant=\"h5\" noWrap>\n              Healthy Life Style\n          </Typography>\n          </Link>\n          <div className={classes.rightHeaderLinks}>\n            <Button onClick={props.logout} style={{color: \"white\"}}>\n              Logout\n            </Button>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <Drawer open={state.left} onClose={toggleDrawer('left', false)}>\n        {sideList('left')}\n      </Drawer>\n    </div>\n  );\n}\n","import \"date-fns\";\nimport React from \"react\";\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport './DateSelector.css';\n\nexport default function MaterialUIPickers(props) {\n\n  const handleDateChange = date => {\n    props.handleChange(date);\n  };\n\n  return (\n    \n    <MuiPickersUtilsProvider utils={DateFnsUtils} className=\"date-selector\">\n      <KeyboardDatePicker\n        margin=\"normal\"\n        id=\"date-picker-dialog\"\n        label=\"Date\"\n        format=\"MM/dd/yyyy\"\n        value={props.selectedDate}\n        onChange={handleDateChange}\n        KeyboardButtonProps={{\n          \"aria-label\": \"change date\"\n        }}\n        className=\"date-selector\"\n      />\n    </MuiPickersUtilsProvider >\n  );\n}","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\n\nexport default function TextInput(props) {\n    \n    return (\n        <TextField\n          id={`${props.label}TextInput`}\n          label={props.label}\n          className={props.class}\n          value={props.value}\n          type={props.type}\n          onChange={(event)=>props.handleChange(event)}\n        />\n    )\n}\n\nTextInput.defaultProps = {\n  id: \"\",\n  label: \"\",\n  value: \"\",\n  type: \"text\",\n  class: \"textField\",\n  handleChange: function(event) {\n    return event.target.value;\n  }\n};","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\nexport default function CompleteButton(props) {\n    console.log(props.class);\n    return (\n        <Button onClick={props.handleForm} variant=\"contained\" size={props.size} color=\"primary\" className={props.class}>\n            {props.text}\n        </Button>\n    )\n}\n\nCompleteButton.defaultProps = {\n    text: \"Create New Entry\",\n    class: \"button\",\n    size: \"small\"\n  };","import React, { Component } from 'react';\nimport DateSelector from '../DateSelector/DateSelector.js'\nimport TextInput from '../TextInput/TextInput.js';\nimport CompleteButton from '../CompleteButton/CompleteButton.js';\nimport './NewItemForm.css';\nimport { createMuiTheme } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/styles\";\n\nconst theme = createMuiTheme({\n    overrides: {\n        // Style sheet name ⚛️\n        MuiInput: {\n            root: {\n                // Name of the rule\n                color: 'white',\n                borderBottom: `2px solid white`,\n                \"&$focused\": {\n                    color: 'white',\n                    borderBottom: `2px solid white`,\n                },\n            },\n            underline: {\n                color: 'white',\n                borderBottom: `2px solid white`,\n                '&:before': {\n                    borderBottom: \"0px\"\n                },\n                '&:after': {\n                    borderBottom: \"0px\"\n                },\n                \"&$focused\": {\n                    color: 'white',\n                    borderBottom: `2px solid white`,\n                },\n                '&:hover:not($disabled):after': {\n                    borderBottom: `2px solid white`,\n                    transform: \"\"\n                },\n                '&:hover:not($disabled):before': {\n                    borderBottom: `2px solid white`,          // String should be terminated\n                },\n              },\n        },\n        MuiFormLabel: {\n            root: {\n                color: 'white',\n                \"&$focused\": {\n                    color: 'white'\n                }\n            },\n\n        },\n        MuiInputLabel: {\n            root: {\n                color: 'white',\n                \"&$focused\": {\n                    color: 'white'\n                },\n            },\n\n        },\n        MuiIconButton: {\n            root: {\n                color: 'white',\n            }\n        },\n        MuiInputAdornment: {\n            root: {\n            }\n        },\n        MuiInputBase: {\n            root: {\n                \"&$focused\": {\n                    color: 'white',\n                    borderBottom: `2px solid white`,\n                },\n            }\n        }\n    },\n});\n\nclass NewItemForm extends Component {\n\n    constructor(props){\n        super(props);\n        this.type = props.type;\n        this.caption = props.caption;\n    }\n    state = {\n        date: new Date(),\n        level: 0,\n    }\n\n    handleDate = date => {\n        this.setState({ date: date })\n    }\n    handleLevel = level => {\n        level = level.target.value;\n        if (level[level.length - 1] !== '0' && !Number(level[level.length - 1])) {\n            console.log(level[level.length - 1]);\n            level = level.substr(0, level.length - 1);\n        }\n        this.setState({ level: level });\n    }\n    handleClick = event => {\n        // add to database\n        this.props.addNewData(this.state.date, this.state.level, () => {\n            this.setState({ date: new Date(), level: 0 })\n        });\n    }\n    render() {\n        return (\n            <ThemeProvider theme={theme}>\n                <div className=\"container\">\n                    <div className='root'>\n                        <DateSelector handleChange={this.handleDate} selectedDate={this.state.date.toDateString()} />\n                        <TextInput label={`${this.caption}`} value={this.state.level} handleChange={this.handleLevel} />\n                        <CompleteButton handleForm={this.handleClick} />\n                    </div>\n                </div>\n            </ThemeProvider>\n        );\n    }\n}\n\nexport default NewItemForm;","import React, { Component } from 'react';\nimport FusionCharts from \"fusioncharts\";\nimport Charts from 'fusioncharts/fusioncharts.charts';\nimport ReactFC from 'react-fusioncharts';\nimport FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\nimport NewItemForm from '../../Components/NewItemForm/NewItemForm'\nimport { Container } from '@material-ui/core';\nimport \"./Graph.css\";\n\nReactFC.fcRoot(FusionCharts, Charts, FusionTheme);\n\nclass Graph extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataSource: null\n    }\n  }\n\n\n  getAllData = (cb) => {\n    fetch(`${this.props.url}/getAll`, {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ userID: this.props.user.uid })\n    }).then(data => data.json()).then((data) => {\n      console.log('fetch resp');\n      console.log(data);\n      const formattedData = data.map(item => {\n        return { label: new Date(item.date).toLocaleDateString(), value: item.amount }\n      })\n      console.log(formattedData);\n      cb(formattedData);\n    })\n  }\n\n  addNewData = (date, amount, cb) => {\n    fetch(`${this.props.url}/new`, {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ date: date, amount: amount, userID: this.props.user.uid})\n    }).then(data => data.json()).then((data) => {\n      cb();\n      this.getAllData(entries => {\n        console.log(entries);\n        console.log({ ...this.state.chartConfigs, ...this.state.dataSource, data: entries });\n        this.setState({\n          chartConfigs: {\n            type: 'line',// The chart type\n            width: '100%', // Width of the chart\n            height: '600', // Height of the chart\n            dataFormat: 'json',\n            dataSource: {\n              \"chart\": {\n                \"caption\": this.props.caption,\n                \"xAxisName\": \"Date\",\n                \"yAxisName\": this.props.yAxisLabel,\n                \"numberSuffix\": this.props.suffix,\n                setadaptiveymin: \"1\",\n                \"theme\": \"fusion\"\n              },\n              \"data\": entries\n            }\n          }\n        })\n      })\n    })\n  }\n\n  componentDidMount() {\n    this.getAllData(data => {\n      console.log('constructor data: ');\n      console.log(data);\n      this.setState({\n        chartConfigs: {\n          type: 'line',// The chart type\n          width: '100%', // Width of the chart\n          height: '60%', // Height of the chart\n          dataFormat: 'json',\n          dataSource: {\n            \"chart\": {\n              \"caption\": this.props.caption,\n              \"xAxisName\": \"Date\",\n              \"yAxisName\": this.props.yAxisLabel,\n              \"numberSuffix\": this.props.suffix,\n              setadaptiveymin: \"1\",\n              \"theme\": \"fusion\"\n            },\n            \"data\": data\n          }\n        }\n      })\n    })\n  }\n\n  render() {\n    return (\n      <Container className=\"wrapper\" maxWidth=\"xl\">\n        <ReactFC\n          {...this.state.chartConfigs}\n        />\n        <NewItemForm label={this.props.type} caption={this.props.caption}/>\n      </Container>);\n  }\n}\n\nexport default Graph;","import React, { Component } from 'react';\nimport Graph from '../../Components/Graph/Graph.js';\nimport './Cholesterol.css';\n\nclass Cholesterol extends Component {\n    state = {};\n    // constructor(props){\n    //     super(props);\n    // }\n\n    componentDidMount() {\n    }\n\n    render() {\n        return (\n            <>\n                <Graph type=\"cholesterol\" caption=\"Cholesterol Level\" yAxisLabel=\"Total Cholesterol Level\" suffix=\"mg/dl\" url=\"api/cholesterol\" user={this.props.user}/>\n            </>\n        );\n    }\n}\n\nexport default Cholesterol;","import React, { Component } from 'react';\nimport Graph from '../../Components/Graph/Graph.js';\nimport './RestingHeartRate.css';\n\nclass RestingHeartRate extends Component {\n    state = {};\n\n    componentDidMount() {\n    }\n\n    render() {\n        return (\n            <>\n                <Graph type=\"cholesterol\" caption=\"BPM\" yAxisLabel=\"Resting Heart Rate\" suffix=\"BPM\" url=\"api/heartrate\" user={this.props.user}/>\n            </>\n        );\n    }\n}\n\nexport default RestingHeartRate;","// src/history.js\n\nimport { createBrowserHistory } from 'history';\n\nexport default createBrowserHistory();","// Import FirebaseAuth and firebase.\nimport React from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from 'firebase';\nimport history from '../../history';\n\nexport default class LogIn extends React.Component {\n  // The component's Local state.\n  state = {\n    isSignedIn: false // Local signed-in state.\n  };\n\n  // Configure FirebaseUI.\n  uiConfig = {\n    // Popup signin flow rather than redirect flow.\n    signInFlow: 'popup',\n    // We will display Google and Facebook as auth providers.\n    signInOptions: [\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      firebase.auth.FacebookAuthProvider.PROVIDER_ID\n    ],\n    callbacks: {\n      // Avoid redirects after sign-in.\n      signInSuccessWithAuthResult: () => {\n          this.props.signIn(firebase.auth().currentUser);\n          history.push('/Home');\n      }\n    },\n\n  };\n\n  render() {\n    if (!this.props.loggedIn) {\n      return (\n        <div>\n          <h1>My App</h1>\n          <p>Please sign-in:</p>\n          <StyledFirebaseAuth uiConfig={this.uiConfig} firebaseAuth={firebase.auth()}/>\n        </div>\n      );\n    }\n    return (\n      <div>\n        <h1>My App</h1>\n        <p>Welcome {firebase.auth().currentUser.displayName}! You are now signed-in!</p>\n        <button onClick={() => firebase.auth().signOut()}>Sign-out</button>\n      </div>\n    );\n  }\n}\n\n\n\n/*import React, { Component } from 'react';\nimport './Login.css';\nimport TextInput from \"../../Components/TextInput/TextInput\";\nimport CompleteButton from \"../../Components/CompleteButton/CompleteButton\";\n\nclass Login extends Component {\n    state = {\n        username: \"\",\n        password: \"\"\n    };\n\n    handleChange = (event) => {\n        let id = event.target.id.split(\"TextInput\")[0];\n        this.setState({[id]: event.target.value});\n    }\n\n    formSubmit = (event) => {\n        console.log(\"submitted\");\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <form className=\"form\">\n                    <TextInput label=\"username\" value={this.state.username} handleChange={this.handleChange} class=\"formItem\"/>\n                    <TextInput label=\"password\" type=\"password\" value={this.state.password} handleChange={this.handleChange} class=\"formItem\"/>\n                    <CompleteButton text=\"Sign Up\" handleForm={this.formSubmit} size=\"medium\" class=\"button\"/>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Login; */","import React, { Component } from 'react';\nimport \"./Home.css\";\n\nclass Home extends Component {\n    state = {  }\n\n    componentDidMount = () => {\n\n    }\n\n    render() { \n        return (\n            <div className=\"container\">\n                <div className=\"welcome\">\n                    <h1>\n                        Welcome to Healthy Living\n                    </h1>\n                    <h5>\n                        An Application to track health markers like cholesterol \n                        and resting heart rate over time for a healthier lifestyle.\n                    </h5>\n                </div>\n                <div className=\"explanation\">\n                    <div>\n                        Sign in\n                    </div>\n                    <div>\n                        View existing data\n                    </div>\n                    <div>\n                        Or add new data\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n \nexport default Home;","import React, { Component } from 'react';\nimport './Signup.css';\nimport TextInput from \"../../Components/TextInput/TextInput\";\nimport CompleteButton from \"../../Components/CompleteButton/CompleteButton\";\n\nclass Login extends Component {\n    state = {\n        username: \"\",\n        password: \"\",\n        validate: \"\"\n    };\n\n    handleChange = (event) => {\n        let id = event.target.id.split(\"TextInput\")[0];\n        this.setState({[id]: event.target.value});\n    }\n\n    formSubmit = (event) => {\n        console.log(\"submitted\");\n    }\n\n    render() {\n        return (\n            <>\n                <form onSubmit={(event) => this.formSubmit(event)}>\n                    <TextInput label=\"username\" value={this.state.username} handleChange={this.handleChange} />\n                    <TextInput label=\"password\" type=\"password\" value={this.state.password} handleChange={this.handleChange} />\n                    <TextInput label=\"validate\" type=\"password\" value={this.state.validate} handleChange={this.handleChange} />\n                    <CompleteButton text=\"Sign Up\" handleForm={this.formSubmit}/>\n                </form>\n            </>\n        );\n    }\n}\n\nexport default Login;","import * as firebase from 'firebase';\nrequire(\"dotenv\").config();\nconsole.log(process.env);\nconsole.log(process.env.FIREBASE_KEY);\n\nconst firebaseConfig = {\n    apiKey: process.env.FIREBASE_KEY,\n    authDomain: \"healthy-living-5cb07.firebaseapp.com\",\n    databaseURL: \"https://healthy-living-5cb07.firebaseio.com\",\n    projectId: \"healthy-living-5cb07\",\n    storageBucket: \"\",\n    messagingSenderId: \"996770199690\",\n    appId: process.env.FIREBASE_APPID,\n    measurementId: \"G-HGLF370KX0\"\n  };\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nexport default firebase;","import React, { Component } from 'react';\nimport './App.css';\nimport NavTabs from '../../Components/NavTabs/NavTabs'\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Cholesterol from '../Cholesterol/Cholesterol.js';\nimport RestingHeartRate from '../RestingHeartRate/RestingHeartRate.js';\nimport Login from \"../Login/Login.js\";\nimport Home from '../Home/Home';\nimport Signup from \"../Signup/Signup\";\nimport firebase from '../../firebase';\nimport history from '../../history';\nimport Background from \"../../images/darkBackground.jpg\";\n\nexport default class App extends Component {\n  state = {\n    loggedIn: false,\n    user: null\n  };\n\n  componentDidMount() {\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(\n      (user) => {\n        console.log(user.uid);\n        console.log(!!user);\n        this.setState({ loggedIn: !!user, user: user})\n      }\n    );\n  }\n\n  // Make sure we un-register Firebase observers when the component unmounts.\n  componentWillUnmount() {\n    this.unregisterAuthObserver();\n  }\n\n  signIn = (user, cb) => {\n    console.log(user);\n    this.setState({ user: user, loggedIn: true });\n    cb();\n  }\n\n  logout = () => {\n    console.log(firebase.auth().currentUser);\n    firebase.auth().signOut();\n    this.setState({loggedIn: false, user: null});\n    history.push('/Home');\n  }\n\n  render() {\n    if (!this.state.loggedIn) {\n      return (\n        <div className=\"background\">\n          <Router history={history}>\n            <NavTabs loggedIn={this.state.loggedIn}/>\n            <Route exact path=\"/Home\" component={Home} />\n            <Route exact path=\"/Login\" render={() => (\n              <Login\n                signIn={this.signIn}\n                loggedIn={this.state.loggedIn}\n              />)}\n            />\n            <Route exact path=\"/Signup\" component={Signup} />\n          </Router>\n        </div>\n      );\n    }\n    else{\n  return(\n  <div className=\"background\" style={{backgroundImage:`url(${Background})`}}>\n  <Router history={history}>\n    <NavTabs logout={this.logout} loggedIn={this.state.loggedIn}/>\n    <Route exact path=\"/Home\" render={() => (\n      <div className=\"Home\">\n        <Home/>\n      </div>\n      )} />\n    <Route exact path=\"/Login\" render={() => (\n      <Login\n        signIn={this.signIn}\n        loggedIn={this.state.loggedIn}\n      />)}\n    />\n    <Route exact path=\"/Signup\" component={Signup} />\n    <Route exact path=\"/Cholesterol\" render={() => (\n      <Cholesterol\n        user={this.state.user}\n      />)}\n    />\n    <Route exact path=\"/RestingHeartRate\" render={() => (\n      <RestingHeartRate\n        user={this.state.user}\n      />)}\n    />\n  </Router>\n  </div >);\n  }\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Pages/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/darkBackground.3cff1dde.jpg\";"],"sourceRoot":""}